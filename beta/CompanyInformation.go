// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// CompanyInformation undocumented
type CompanyInformation struct {
	// Entity is the base model of CompanyInformation
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Address undocumented
	Address *PostalAddressType `json:"address,omitempty"`
	// PhoneNumber undocumented
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// FaxNumber undocumented
	FaxNumber *string `json:"faxNumber,omitempty"`
	// Email undocumented
	Email *string `json:"email,omitempty"`
	// Website undocumented
	Website *string `json:"website,omitempty"`
	// TaxRegistrationNumber undocumented
	TaxRegistrationNumber *string `json:"taxRegistrationNumber,omitempty"`
	// CurrencyCode undocumented
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// CurrentFiscalYearStartDate undocumented
	CurrentFiscalYearStartDate *Date `json:"currentFiscalYearStartDate,omitempty"`
	// Industry undocumented
	Industry *string `json:"industry,omitempty"`
	// Picture undocumented
	Picture *Stream `json:"picture,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
}

// CompanyInformationRequestBuilder is request builder for CompanyInformation
type CompanyInformationRequestBuilder struct{ BaseRequestBuilder }

// Request returns CompanyInformationRequest
func (b *CompanyInformationRequestBuilder) Request() *CompanyInformationRequest {
	return &CompanyInformationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// CompanyInformationRequest is request for CompanyInformation
type CompanyInformationRequest struct{ BaseRequest }

// Get performs GET request for CompanyInformation
func (r *CompanyInformationRequest) Get(ctx context.Context) (resObj *CompanyInformation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for CompanyInformation
func (r *CompanyInformationRequest) Update(ctx context.Context, reqObj *CompanyInformation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for CompanyInformation
func (r *CompanyInformationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
