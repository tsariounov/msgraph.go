// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// SitePage undocumented
type SitePage struct {
	// BaseItem is the base model of SitePage
	BaseItem
	// Title undocumented
	Title *string `json:"title,omitempty"`
	// ContentType undocumented
	ContentType *ContentTypeInfo `json:"contentType,omitempty"`
	// PageLayoutType undocumented
	PageLayoutType *string `json:"pageLayoutType,omitempty"`
	// WebParts undocumented
	WebParts []WebPart `json:"webParts,omitempty"`
	// PublishingState undocumented
	PublishingState *PublicationFacet `json:"publishingState,omitempty"`
}

// SitePagePublishRequestParameter undocumented
type SitePagePublishRequestParameter struct {
}

// SitePageRequestBuilder is request builder for SitePage
type SitePageRequestBuilder struct{ BaseRequestBuilder }

// Request returns SitePageRequest
func (b *SitePageRequestBuilder) Request() *SitePageRequest {
	return &SitePageRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SitePageRequest is request for SitePage
type SitePageRequest struct{ BaseRequest }

// Get performs GET request for SitePage
func (r *SitePageRequest) Get(ctx context.Context) (resObj *SitePage, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SitePage
func (r *SitePageRequest) Update(ctx context.Context, reqObj *SitePage) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SitePage
func (r *SitePageRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

//
type SitePagePublishRequestBuilder struct{ BaseRequestBuilder }

// Publish action undocumented
func (b *SitePageRequestBuilder) Publish(reqObj *SitePagePublishRequestParameter) *SitePagePublishRequestBuilder {
	bb := &SitePagePublishRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/publish"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type SitePagePublishRequest struct{ BaseRequest }

//
func (b *SitePagePublishRequestBuilder) Request() *SitePagePublishRequest {
	return &SitePagePublishRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *SitePagePublishRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
