// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// PrivilegedOperationEvent undocumented
type PrivilegedOperationEvent struct {
	// Entity is the base model of PrivilegedOperationEvent
	Entity
	// UserID undocumented
	UserID *string `json:"userId,omitempty"`
	// UserName undocumented
	UserName *string `json:"userName,omitempty"`
	// UserMail undocumented
	UserMail *string `json:"userMail,omitempty"`
	// RoleID undocumented
	RoleID *string `json:"roleId,omitempty"`
	// RoleName undocumented
	RoleName *string `json:"roleName,omitempty"`
	// ExpirationDateTime undocumented
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// CreationDateTime undocumented
	CreationDateTime *time.Time `json:"creationDateTime,omitempty"`
	// RequestorID undocumented
	RequestorID *string `json:"requestorId,omitempty"`
	// RequestorName undocumented
	RequestorName *string `json:"requestorName,omitempty"`
	// TenantID undocumented
	TenantID *string `json:"tenantId,omitempty"`
	// RequestType undocumented
	RequestType *string `json:"requestType,omitempty"`
	// AdditionalInformation undocumented
	AdditionalInformation *string `json:"additionalInformation,omitempty"`
	// ReferenceKey undocumented
	ReferenceKey *string `json:"referenceKey,omitempty"`
	// ReferenceSystem undocumented
	ReferenceSystem *string `json:"referenceSystem,omitempty"`
}

// PrivilegedOperationEventRequestBuilder is request builder for PrivilegedOperationEvent
type PrivilegedOperationEventRequestBuilder struct{ BaseRequestBuilder }

// Request returns PrivilegedOperationEventRequest
func (b *PrivilegedOperationEventRequestBuilder) Request() *PrivilegedOperationEventRequest {
	return &PrivilegedOperationEventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PrivilegedOperationEventRequest is request for PrivilegedOperationEvent
type PrivilegedOperationEventRequest struct{ BaseRequest }

// Get performs GET request for PrivilegedOperationEvent
func (r *PrivilegedOperationEventRequest) Get(ctx context.Context) (resObj *PrivilegedOperationEvent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PrivilegedOperationEvent
func (r *PrivilegedOperationEventRequest) Update(ctx context.Context, reqObj *PrivilegedOperationEvent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PrivilegedOperationEvent
func (r *PrivilegedOperationEventRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
