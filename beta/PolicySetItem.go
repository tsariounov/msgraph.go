// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// PolicySetItem A class containing the properties used for PolicySet Item.
type PolicySetItem struct {
	// Entity is the base model of PolicySetItem
	Entity
	// CreatedDateTime Creation time of the PolicySetItem.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastModifiedDateTime Last modified time of the PolicySetItem.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// PayloadID PayloadId of the PolicySetItem.
	PayloadID *string `json:"payloadId,omitempty"`
	// ItemType policySetType of the PolicySetItem.
	ItemType *string `json:"itemType,omitempty"`
	// DisplayName DisplayName of the PolicySetItem.
	DisplayName *string `json:"displayName,omitempty"`
	// Status Status of the PolicySetItem.
	Status *PolicySetStatus `json:"status,omitempty"`
	// ErrorCode Error code if any occured.
	ErrorCode *ErrorCode `json:"errorCode,omitempty"`
	// GuidedDeploymentTags Tags of the guided deployment
	GuidedDeploymentTags []string `json:"guidedDeploymentTags,omitempty"`
}

// PolicySetItemRequestBuilder is request builder for PolicySetItem
type PolicySetItemRequestBuilder struct{ BaseRequestBuilder }

// Request returns PolicySetItemRequest
func (b *PolicySetItemRequestBuilder) Request() *PolicySetItemRequest {
	return &PolicySetItemRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// PolicySetItemRequest is request for PolicySetItem
type PolicySetItemRequest struct{ BaseRequest }

// Get performs GET request for PolicySetItem
func (r *PolicySetItemRequest) Get(ctx context.Context) (resObj *PolicySetItem, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for PolicySetItem
func (r *PolicySetItemRequest) Update(ctx context.Context, reqObj *PolicySetItem) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for PolicySetItem
func (r *PolicySetItemRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
