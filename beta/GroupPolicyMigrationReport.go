// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"
	"time"

	"github.com/yaegashi/msgraph.go/jsonx"
)

// GroupPolicyMigrationReport The Group Policy migration report.
type GroupPolicyMigrationReport struct {
	// Entity is the base model of GroupPolicyMigrationReport
	Entity
	// GroupPolicyObjectID The Group Policy Object GUID from GPO Xml content
	GroupPolicyObjectID *UUID `json:"groupPolicyObjectId,omitempty"`
	// DisplayName The name of Group Policy Object from the GPO Xml Content
	DisplayName *string `json:"displayName,omitempty"`
	// OuDistinguishedName The distinguished name of the OU.
	OuDistinguishedName *string `json:"ouDistinguishedName,omitempty"`
	// CreatedDateTime The date and time at which the GroupPolicyMigrationReport was created.
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// LastModifiedDateTime The date and time at which the GroupPolicyMigrationReport was last modified.
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// GroupPolicyCreatedDateTime The date and time at which the GroupPolicyMigrationReport was created.
	GroupPolicyCreatedDateTime *time.Time `json:"groupPolicyCreatedDateTime,omitempty"`
	// GroupPolicyLastModifiedDateTime The date and time at which the GroupPolicyMigrationReport was last modified.
	GroupPolicyLastModifiedDateTime *time.Time `json:"groupPolicyLastModifiedDateTime,omitempty"`
	// MigrationReadiness The Intune coverage for the associated Group Policy Object file.
	MigrationReadiness *GroupPolicyMigrationReadiness `json:"migrationReadiness,omitempty"`
	// TargetedInActiveDirectory The Targeted in AD property from GPO Xml Content
	TargetedInActiveDirectory *bool `json:"targetedInActiveDirectory,omitempty"`
	// TotalSettingsCount The total number of Group Policy Settings from GPO file.
	TotalSettingsCount *int `json:"totalSettingsCount,omitempty"`
	// SupportedSettingsCount The number of Group Policy Settings supported by Intune.
	SupportedSettingsCount *int `json:"supportedSettingsCount,omitempty"`
	// SupportedSettingsPercent The Percentage of Group Policy Settings supported by Intune.
	SupportedSettingsPercent *int `json:"supportedSettingsPercent,omitempty"`
	// GroupPolicySettingMappings undocumented
	GroupPolicySettingMappings []GroupPolicySettingMapping `json:"groupPolicySettingMappings,omitempty"`
}

// GroupPolicyMigrationReportCollectionCreateMigrationReportRequestParameter undocumented
type GroupPolicyMigrationReportCollectionCreateMigrationReportRequestParameter struct {
	// GroupPolicyObjectFile undocumented
	GroupPolicyObjectFile *GroupPolicyObjectFile `json:"groupPolicyObjectFile,omitempty"`
}

// GroupPolicyMigrationReportRequestBuilder is request builder for GroupPolicyMigrationReport
type GroupPolicyMigrationReportRequestBuilder struct{ BaseRequestBuilder }

// Request returns GroupPolicyMigrationReportRequest
func (b *GroupPolicyMigrationReportRequestBuilder) Request() *GroupPolicyMigrationReportRequest {
	return &GroupPolicyMigrationReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GroupPolicyMigrationReportRequest is request for GroupPolicyMigrationReport
type GroupPolicyMigrationReportRequest struct{ BaseRequest }

// Get performs GET request for GroupPolicyMigrationReport
func (r *GroupPolicyMigrationReportRequest) Get(ctx context.Context) (resObj *GroupPolicyMigrationReport, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GroupPolicyMigrationReport
func (r *GroupPolicyMigrationReportRequest) Update(ctx context.Context, reqObj *GroupPolicyMigrationReport) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GroupPolicyMigrationReport
func (r *GroupPolicyMigrationReportRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// GroupPolicySettingMappings returns request builder for GroupPolicySettingMapping collection
func (b *GroupPolicyMigrationReportRequestBuilder) GroupPolicySettingMappings() *GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequestBuilder {
	bb := &GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/groupPolicySettingMappings"
	return bb
}

// GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequestBuilder is request builder for GroupPolicySettingMapping collection
type GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for GroupPolicySettingMapping collection
func (b *GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequestBuilder) Request() *GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequest {
	return &GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for GroupPolicySettingMapping item
func (b *GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequestBuilder) ID(id string) *GroupPolicySettingMappingRequestBuilder {
	bb := &GroupPolicySettingMappingRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequest is request for GroupPolicySettingMapping collection
type GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for GroupPolicySettingMapping collection
func (r *GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}) ([]GroupPolicySettingMapping, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []GroupPolicySettingMapping
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []GroupPolicySettingMapping
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// Get performs GET request for GroupPolicySettingMapping collection
func (r *GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequest) Get(ctx context.Context) ([]GroupPolicySettingMapping, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil)
}

// Add performs POST request for GroupPolicySettingMapping collection
func (r *GroupPolicyMigrationReportGroupPolicySettingMappingsCollectionRequest) Add(ctx context.Context, reqObj *GroupPolicySettingMapping) (resObj *GroupPolicySettingMapping, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

//
type GroupPolicyMigrationReportCollectionCreateMigrationReportRequestBuilder struct{ BaseRequestBuilder }

// CreateMigrationReport action undocumented
func (b *DeviceManagementGroupPolicyMigrationReportsCollectionRequestBuilder) CreateMigrationReport(reqObj *GroupPolicyMigrationReportCollectionCreateMigrationReportRequestParameter) *GroupPolicyMigrationReportCollectionCreateMigrationReportRequestBuilder {
	bb := &GroupPolicyMigrationReportCollectionCreateMigrationReportRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/createMigrationReport"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GroupPolicyMigrationReportCollectionCreateMigrationReportRequest struct{ BaseRequest }

//
func (b *GroupPolicyMigrationReportCollectionCreateMigrationReportRequestBuilder) Request() *GroupPolicyMigrationReportCollectionCreateMigrationReportRequest {
	return &GroupPolicyMigrationReportCollectionCreateMigrationReportRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *GroupPolicyMigrationReportCollectionCreateMigrationReportRequest) Post(ctx context.Context) (resObj *string, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}
