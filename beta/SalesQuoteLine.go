// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// SalesQuoteLine undocumented
type SalesQuoteLine struct {
	// Entity is the base model of SalesQuoteLine
	Entity
	// DocumentID undocumented
	DocumentID *UUID `json:"documentId,omitempty"`
	// Sequence undocumented
	Sequence *int `json:"sequence,omitempty"`
	// ItemID undocumented
	ItemID *UUID `json:"itemId,omitempty"`
	// AccountID undocumented
	AccountID *UUID `json:"accountId,omitempty"`
	// LineType undocumented
	LineType *string `json:"lineType,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// UnitOfMeasureID undocumented
	UnitOfMeasureID *UUID `json:"unitOfMeasureId,omitempty"`
	// UnitPrice undocumented
	UnitPrice *int `json:"unitPrice,omitempty"`
	// Quantity undocumented
	Quantity *int `json:"quantity,omitempty"`
	// DiscountAmount undocumented
	DiscountAmount *int `json:"discountAmount,omitempty"`
	// DiscountPercent undocumented
	DiscountPercent *int `json:"discountPercent,omitempty"`
	// DiscountAppliedBeforeTax undocumented
	DiscountAppliedBeforeTax *bool `json:"discountAppliedBeforeTax,omitempty"`
	// AmountExcludingTax undocumented
	AmountExcludingTax *int `json:"amountExcludingTax,omitempty"`
	// TaxCode undocumented
	TaxCode *string `json:"taxCode,omitempty"`
	// TaxPercent undocumented
	TaxPercent *int `json:"taxPercent,omitempty"`
	// TotalTaxAmount undocumented
	TotalTaxAmount *int `json:"totalTaxAmount,omitempty"`
	// AmountIncludingTax undocumented
	AmountIncludingTax *int `json:"amountIncludingTax,omitempty"`
	// NetAmount undocumented
	NetAmount *int `json:"netAmount,omitempty"`
	// NetTaxAmount undocumented
	NetTaxAmount *int `json:"netTaxAmount,omitempty"`
	// NetAmountIncludingTax undocumented
	NetAmountIncludingTax *int `json:"netAmountIncludingTax,omitempty"`
	// Item undocumented
	Item *Item `json:"item,omitempty"`
	// Account undocumented
	Account *Account `json:"account,omitempty"`
}

// SalesQuoteLineRequestBuilder is request builder for SalesQuoteLine
type SalesQuoteLineRequestBuilder struct{ BaseRequestBuilder }

// Request returns SalesQuoteLineRequest
func (b *SalesQuoteLineRequestBuilder) Request() *SalesQuoteLineRequest {
	return &SalesQuoteLineRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SalesQuoteLineRequest is request for SalesQuoteLine
type SalesQuoteLineRequest struct{ BaseRequest }

// Get performs GET request for SalesQuoteLine
func (r *SalesQuoteLineRequest) Get(ctx context.Context) (resObj *SalesQuoteLine, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SalesQuoteLine
func (r *SalesQuoteLineRequest) Update(ctx context.Context, reqObj *SalesQuoteLine) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SalesQuoteLine
func (r *SalesQuoteLineRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// Account is navigation property
func (b *SalesQuoteLineRequestBuilder) Account() *AccountRequestBuilder {
	bb := &AccountRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/account"
	return bb
}

// Item is navigation property
func (b *SalesQuoteLineRequestBuilder) Item() *ItemRequestBuilder {
	bb := &ItemRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/item"
	return bb
}
