// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"
	"time"

	"github.com/yaegashi/msgraph.go/jsonx"
)

// SalesInvoice undocumented
type SalesInvoice struct {
	// Entity is the base model of SalesInvoice
	Entity
	// Number undocumented
	Number *string `json:"number,omitempty"`
	// ExternalDocumentNumber undocumented
	ExternalDocumentNumber *string `json:"externalDocumentNumber,omitempty"`
	// InvoiceDate undocumented
	InvoiceDate *Date `json:"invoiceDate,omitempty"`
	// DueDate undocumented
	DueDate *Date `json:"dueDate,omitempty"`
	// CustomerPurchaseOrderReference undocumented
	CustomerPurchaseOrderReference *string `json:"customerPurchaseOrderReference,omitempty"`
	// CustomerID undocumented
	CustomerID *UUID `json:"customerId,omitempty"`
	// CustomerNumber undocumented
	CustomerNumber *string `json:"customerNumber,omitempty"`
	// CustomerName undocumented
	CustomerName *string `json:"customerName,omitempty"`
	// BillToName undocumented
	BillToName *string `json:"billToName,omitempty"`
	// BillToCustomerID undocumented
	BillToCustomerID *UUID `json:"billToCustomerId,omitempty"`
	// BillToCustomerNumber undocumented
	BillToCustomerNumber *string `json:"billToCustomerNumber,omitempty"`
	// ShipToName undocumented
	ShipToName *string `json:"shipToName,omitempty"`
	// ShipToContact undocumented
	ShipToContact *string `json:"shipToContact,omitempty"`
	// SellingPostalAddress undocumented
	SellingPostalAddress *PostalAddressType `json:"sellingPostalAddress,omitempty"`
	// BillingPostalAddress undocumented
	BillingPostalAddress *PostalAddressType `json:"billingPostalAddress,omitempty"`
	// ShippingPostalAddress undocumented
	ShippingPostalAddress *PostalAddressType `json:"shippingPostalAddress,omitempty"`
	// CurrencyID undocumented
	CurrencyID *UUID `json:"currencyId,omitempty"`
	// CurrencyCode undocumented
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// OrderID undocumented
	OrderID *UUID `json:"orderId,omitempty"`
	// OrderNumber undocumented
	OrderNumber *string `json:"orderNumber,omitempty"`
	// PaymentTermsID undocumented
	PaymentTermsID *UUID `json:"paymentTermsId,omitempty"`
	// ShipmentMethodID undocumented
	ShipmentMethodID *UUID `json:"shipmentMethodId,omitempty"`
	// Salesperson undocumented
	Salesperson *string `json:"salesperson,omitempty"`
	// PricesIncludeTax undocumented
	PricesIncludeTax *bool `json:"pricesIncludeTax,omitempty"`
	// DiscountAmount undocumented
	DiscountAmount *int `json:"discountAmount,omitempty"`
	// DiscountAppliedBeforeTax undocumented
	DiscountAppliedBeforeTax *bool `json:"discountAppliedBeforeTax,omitempty"`
	// TotalAmountExcludingTax undocumented
	TotalAmountExcludingTax *int `json:"totalAmountExcludingTax,omitempty"`
	// TotalTaxAmount undocumented
	TotalTaxAmount *int `json:"totalTaxAmount,omitempty"`
	// TotalAmountIncludingTax undocumented
	TotalAmountIncludingTax *int `json:"totalAmountIncludingTax,omitempty"`
	// Status undocumented
	Status *string `json:"status,omitempty"`
	// LastModifiedDateTime undocumented
	LastModifiedDateTime *time.Time `json:"lastModifiedDateTime,omitempty"`
	// PhoneNumber undocumented
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// Email undocumented
	Email *string `json:"email,omitempty"`
	// SalesInvoiceLines undocumented
	SalesInvoiceLines []SalesInvoiceLine `json:"salesInvoiceLines,omitempty"`
	// Customer undocumented
	Customer *Customer `json:"customer,omitempty"`
	// Currency undocumented
	Currency *Currency `json:"currency,omitempty"`
	// PaymentTerm undocumented
	PaymentTerm *PaymentTerm `json:"paymentTerm,omitempty"`
	// ShipmentMethod undocumented
	ShipmentMethod *ShipmentMethod `json:"shipmentMethod,omitempty"`
}

// SalesInvoiceCancelAndSendRequestParameter undocumented
type SalesInvoiceCancelAndSendRequestParameter struct {
}

// SalesInvoiceCancelRequestParameter undocumented
type SalesInvoiceCancelRequestParameter struct {
}

// SalesInvoicePostAndSendRequestParameter undocumented
type SalesInvoicePostAndSendRequestParameter struct {
}

// SalesInvoicePostRequestParameter undocumented
type SalesInvoicePostRequestParameter struct {
}

// SalesInvoiceSendRequestParameter undocumented
type SalesInvoiceSendRequestParameter struct {
}

// SalesInvoiceRequestBuilder is request builder for SalesInvoice
type SalesInvoiceRequestBuilder struct{ BaseRequestBuilder }

// Request returns SalesInvoiceRequest
func (b *SalesInvoiceRequestBuilder) Request() *SalesInvoiceRequest {
	return &SalesInvoiceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SalesInvoiceRequest is request for SalesInvoice
type SalesInvoiceRequest struct{ BaseRequest }

// Get performs GET request for SalesInvoice
func (r *SalesInvoiceRequest) Get(ctx context.Context) (resObj *SalesInvoice, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SalesInvoice
func (r *SalesInvoiceRequest) Update(ctx context.Context, reqObj *SalesInvoice) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SalesInvoice
func (r *SalesInvoiceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// Currency is navigation property
func (b *SalesInvoiceRequestBuilder) Currency() *CurrencyRequestBuilder {
	bb := &CurrencyRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/currency"
	return bb
}

// Customer is navigation property
func (b *SalesInvoiceRequestBuilder) Customer() *CustomerRequestBuilder {
	bb := &CustomerRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/customer"
	return bb
}

// PaymentTerm is navigation property
func (b *SalesInvoiceRequestBuilder) PaymentTerm() *PaymentTermRequestBuilder {
	bb := &PaymentTermRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/paymentTerm"
	return bb
}

// SalesInvoiceLines returns request builder for SalesInvoiceLine collection
func (b *SalesInvoiceRequestBuilder) SalesInvoiceLines() *SalesInvoiceSalesInvoiceLinesCollectionRequestBuilder {
	bb := &SalesInvoiceSalesInvoiceLinesCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/salesInvoiceLines"
	return bb
}

// SalesInvoiceSalesInvoiceLinesCollectionRequestBuilder is request builder for SalesInvoiceLine collection
type SalesInvoiceSalesInvoiceLinesCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for SalesInvoiceLine collection
func (b *SalesInvoiceSalesInvoiceLinesCollectionRequestBuilder) Request() *SalesInvoiceSalesInvoiceLinesCollectionRequest {
	return &SalesInvoiceSalesInvoiceLinesCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for SalesInvoiceLine item
func (b *SalesInvoiceSalesInvoiceLinesCollectionRequestBuilder) ID(id string) *SalesInvoiceLineRequestBuilder {
	bb := &SalesInvoiceLineRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// SalesInvoiceSalesInvoiceLinesCollectionRequest is request for SalesInvoiceLine collection
type SalesInvoiceSalesInvoiceLinesCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for SalesInvoiceLine collection
func (r *SalesInvoiceSalesInvoiceLinesCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}) ([]SalesInvoiceLine, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []SalesInvoiceLine
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []SalesInvoiceLine
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// Get performs GET request for SalesInvoiceLine collection
func (r *SalesInvoiceSalesInvoiceLinesCollectionRequest) Get(ctx context.Context) ([]SalesInvoiceLine, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil)
}

// Add performs POST request for SalesInvoiceLine collection
func (r *SalesInvoiceSalesInvoiceLinesCollectionRequest) Add(ctx context.Context, reqObj *SalesInvoiceLine) (resObj *SalesInvoiceLine, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// ShipmentMethod is navigation property
func (b *SalesInvoiceRequestBuilder) ShipmentMethod() *ShipmentMethodRequestBuilder {
	bb := &ShipmentMethodRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/shipmentMethod"
	return bb
}

//
type SalesInvoiceCancelAndSendRequestBuilder struct{ BaseRequestBuilder }

// CancelAndSend action undocumented
func (b *SalesInvoiceRequestBuilder) CancelAndSend(reqObj *SalesInvoiceCancelAndSendRequestParameter) *SalesInvoiceCancelAndSendRequestBuilder {
	bb := &SalesInvoiceCancelAndSendRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cancelAndSend"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type SalesInvoiceCancelAndSendRequest struct{ BaseRequest }

//
func (b *SalesInvoiceCancelAndSendRequestBuilder) Request() *SalesInvoiceCancelAndSendRequest {
	return &SalesInvoiceCancelAndSendRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *SalesInvoiceCancelAndSendRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type SalesInvoiceCancelRequestBuilder struct{ BaseRequestBuilder }

// Cancel action undocumented
func (b *SalesInvoiceRequestBuilder) Cancel(reqObj *SalesInvoiceCancelRequestParameter) *SalesInvoiceCancelRequestBuilder {
	bb := &SalesInvoiceCancelRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cancel"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type SalesInvoiceCancelRequest struct{ BaseRequest }

//
func (b *SalesInvoiceCancelRequestBuilder) Request() *SalesInvoiceCancelRequest {
	return &SalesInvoiceCancelRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *SalesInvoiceCancelRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type SalesInvoicePostAndSendRequestBuilder struct{ BaseRequestBuilder }

// PostAndSend action undocumented
func (b *SalesInvoiceRequestBuilder) PostAndSend(reqObj *SalesInvoicePostAndSendRequestParameter) *SalesInvoicePostAndSendRequestBuilder {
	bb := &SalesInvoicePostAndSendRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/postAndSend"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type SalesInvoicePostAndSendRequest struct{ BaseRequest }

//
func (b *SalesInvoicePostAndSendRequestBuilder) Request() *SalesInvoicePostAndSendRequest {
	return &SalesInvoicePostAndSendRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *SalesInvoicePostAndSendRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type SalesInvoicePostRequestBuilder struct{ BaseRequestBuilder }

// Post action undocumented
func (b *SalesInvoiceRequestBuilder) Post(reqObj *SalesInvoicePostRequestParameter) *SalesInvoicePostRequestBuilder {
	bb := &SalesInvoicePostRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/post"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type SalesInvoicePostRequest struct{ BaseRequest }

//
func (b *SalesInvoicePostRequestBuilder) Request() *SalesInvoicePostRequest {
	return &SalesInvoicePostRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *SalesInvoicePostRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type SalesInvoiceSendRequestBuilder struct{ BaseRequestBuilder }

// Send action undocumented
func (b *SalesInvoiceRequestBuilder) Send(reqObj *SalesInvoiceSendRequestParameter) *SalesInvoiceSendRequestBuilder {
	bb := &SalesInvoiceSendRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/send"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type SalesInvoiceSendRequest struct{ BaseRequest }

//
func (b *SalesInvoiceSendRequestBuilder) Request() *SalesInvoiceSendRequest {
	return &SalesInvoiceSendRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *SalesInvoiceSendRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
