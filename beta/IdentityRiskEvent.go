// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// IdentityRiskEvent undocumented
type IdentityRiskEvent struct {
	// Entity is the base model of IdentityRiskEvent
	Entity
	// UserDisplayName undocumented
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// RiskEventDateTime undocumented
	RiskEventDateTime *time.Time `json:"riskEventDateTime,omitempty"`
	// RiskEventType undocumented
	RiskEventType *string `json:"riskEventType,omitempty"`
	// RiskLevel undocumented
	RiskLevel *RiskLevel `json:"riskLevel,omitempty"`
	// RiskEventStatus undocumented
	RiskEventStatus *RiskEventStatus `json:"riskEventStatus,omitempty"`
	// ClosedDateTime undocumented
	ClosedDateTime *time.Time `json:"closedDateTime,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// UserID undocumented
	UserID *string `json:"userId,omitempty"`
	// ImpactedUser undocumented
	ImpactedUser *User `json:"impactedUser,omitempty"`
}

// IdentityRiskEventRequestBuilder is request builder for IdentityRiskEvent
type IdentityRiskEventRequestBuilder struct{ BaseRequestBuilder }

// Request returns IdentityRiskEventRequest
func (b *IdentityRiskEventRequestBuilder) Request() *IdentityRiskEventRequest {
	return &IdentityRiskEventRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IdentityRiskEventRequest is request for IdentityRiskEvent
type IdentityRiskEventRequest struct{ BaseRequest }

// Get performs GET request for IdentityRiskEvent
func (r *IdentityRiskEventRequest) Get(ctx context.Context) (resObj *IdentityRiskEvent, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IdentityRiskEvent
func (r *IdentityRiskEventRequest) Update(ctx context.Context, reqObj *IdentityRiskEvent) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IdentityRiskEvent
func (r *IdentityRiskEventRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ImpactedUser is navigation property
func (b *IdentityRiskEventRequestBuilder) ImpactedUser() *UserRequestBuilder {
	bb := &UserRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/impactedUser"
	return bb
}
