// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// DeviceManagementExportJob Entity representing a job to export a report
type DeviceManagementExportJob struct {
	// Entity is the base model of DeviceManagementExportJob
	Entity
	// ReportName Name of the report
	ReportName *string `json:"reportName,omitempty"`
	// Filter Filters applied on the report
	Filter *string `json:"filter,omitempty"`
	// Select Columns selected from the report
	Select []string `json:"select,omitempty"`
	// Format Format of the exported report
	Format *DeviceManagementReportFileFormat `json:"format,omitempty"`
	// SnapshotID A snapshot is an identifiable subset of the dataset represented by the ReportName. A sessionId or CachedReportConfiguration id can be used here. If a sessionId is specified, Filter, Select, and OrderBy are applied to the data represented by the sessionId. Filter, Select, and OrderBy cannot be specified together with a CachedReportConfiguration id.
	SnapshotID *string `json:"snapshotId,omitempty"`
	// Status Status of the export job
	Status *DeviceManagementReportStatus `json:"status,omitempty"`
	// URL Temporary location of the exported report
	URL *string `json:"url,omitempty"`
	// RequestDateTime Time that the exported report was requested
	RequestDateTime *time.Time `json:"requestDateTime,omitempty"`
	// ExpirationDateTime Time that the exported report expires
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
}

// DeviceManagementExportJobRequestBuilder is request builder for DeviceManagementExportJob
type DeviceManagementExportJobRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementExportJobRequest
func (b *DeviceManagementExportJobRequestBuilder) Request() *DeviceManagementExportJobRequest {
	return &DeviceManagementExportJobRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementExportJobRequest is request for DeviceManagementExportJob
type DeviceManagementExportJobRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementExportJob
func (r *DeviceManagementExportJobRequest) Get(ctx context.Context) (resObj *DeviceManagementExportJob, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementExportJob
func (r *DeviceManagementExportJobRequest) Update(ctx context.Context, reqObj *DeviceManagementExportJob) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementExportJob
func (r *DeviceManagementExportJobRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
