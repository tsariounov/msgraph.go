// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// RiskDetection undocumented
type RiskDetection struct {
	// Entity is the base model of RiskDetection
	Entity
	// RequestID undocumented
	RequestID *string `json:"requestId,omitempty"`
	// CorrelationID undocumented
	CorrelationID *string `json:"correlationId,omitempty"`
	// RiskType undocumented
	RiskType *RiskEventType `json:"riskType,omitempty"`
	// RiskState undocumented
	RiskState *RiskState `json:"riskState,omitempty"`
	// RiskLevel undocumented
	RiskLevel *RiskLevel `json:"riskLevel,omitempty"`
	// RiskDetail undocumented
	RiskDetail *RiskDetail `json:"riskDetail,omitempty"`
	// Source undocumented
	Source *string `json:"source,omitempty"`
	// DetectionTimingType undocumented
	DetectionTimingType *RiskDetectionTimingType `json:"detectionTimingType,omitempty"`
	// Activity undocumented
	Activity *ActivityType `json:"activity,omitempty"`
	// TokenIssuerType undocumented
	TokenIssuerType *TokenIssuerType `json:"tokenIssuerType,omitempty"`
	// IPAddress undocumented
	IPAddress *string `json:"ipAddress,omitempty"`
	// Location undocumented
	Location *SignInLocation `json:"location,omitempty"`
	// ActivityDateTime undocumented
	ActivityDateTime *time.Time `json:"activityDateTime,omitempty"`
	// DetectedDateTime undocumented
	DetectedDateTime *time.Time `json:"detectedDateTime,omitempty"`
	// LastUpdatedDateTime undocumented
	LastUpdatedDateTime *time.Time `json:"lastUpdatedDateTime,omitempty"`
	// UserID undocumented
	UserID *string `json:"userId,omitempty"`
	// UserDisplayName undocumented
	UserDisplayName *string `json:"userDisplayName,omitempty"`
	// UserPrincipalName undocumented
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// AdditionalInfo undocumented
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
}

// RiskDetectionRequestBuilder is request builder for RiskDetection
type RiskDetectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns RiskDetectionRequest
func (b *RiskDetectionRequestBuilder) Request() *RiskDetectionRequest {
	return &RiskDetectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RiskDetectionRequest is request for RiskDetection
type RiskDetectionRequest struct{ BaseRequest }

// Get performs GET request for RiskDetection
func (r *RiskDetectionRequest) Get(ctx context.Context) (resObj *RiskDetection, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for RiskDetection
func (r *RiskDetectionRequest) Update(ctx context.Context, reqObj *RiskDetection) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for RiskDetection
func (r *RiskDetectionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
