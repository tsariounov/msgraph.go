// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// DeviceManagementExchangeOnPremisesPolicy Singleton entity which represents the Exchange OnPremises policy configured for a tenant.
type DeviceManagementExchangeOnPremisesPolicy struct {
	// Entity is the base model of DeviceManagementExchangeOnPremisesPolicy
	Entity
	// NotificationContent Notification text that will be sent to users quarantined by this policy. This is UTF8 encoded byte array HTML.
	NotificationContent *Binary `json:"notificationContent,omitempty"`
	// DefaultAccessLevel Default access state in Exchange. This rule applies globally to the entire Exchange organization
	DefaultAccessLevel *DeviceManagementExchangeAccessLevel `json:"defaultAccessLevel,omitempty"`
	// AccessRules The list of device access rules in Exchange. The access rules apply globally to the entire Exchange organization
	AccessRules []DeviceManagementExchangeAccessRule `json:"accessRules,omitempty"`
	// KnownDeviceClasses The list of device classes known to Exchange
	KnownDeviceClasses []DeviceManagementExchangeDeviceClass `json:"knownDeviceClasses,omitempty"`
	// ConditionalAccessSettings undocumented
	ConditionalAccessSettings *OnPremisesConditionalAccessSettings `json:"conditionalAccessSettings,omitempty"`
}

// DeviceManagementExchangeOnPremisesPolicyRequestBuilder is request builder for DeviceManagementExchangeOnPremisesPolicy
type DeviceManagementExchangeOnPremisesPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementExchangeOnPremisesPolicyRequest
func (b *DeviceManagementExchangeOnPremisesPolicyRequestBuilder) Request() *DeviceManagementExchangeOnPremisesPolicyRequest {
	return &DeviceManagementExchangeOnPremisesPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementExchangeOnPremisesPolicyRequest is request for DeviceManagementExchangeOnPremisesPolicy
type DeviceManagementExchangeOnPremisesPolicyRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementExchangeOnPremisesPolicy
func (r *DeviceManagementExchangeOnPremisesPolicyRequest) Get(ctx context.Context) (resObj *DeviceManagementExchangeOnPremisesPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementExchangeOnPremisesPolicy
func (r *DeviceManagementExchangeOnPremisesPolicyRequest) Update(ctx context.Context, reqObj *DeviceManagementExchangeOnPremisesPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementExchangeOnPremisesPolicy
func (r *DeviceManagementExchangeOnPremisesPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ConditionalAccessSettings is navigation property
func (b *DeviceManagementExchangeOnPremisesPolicyRequestBuilder) ConditionalAccessSettings() *OnPremisesConditionalAccessSettingsRequestBuilder {
	bb := &OnPremisesConditionalAccessSettingsRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/conditionalAccessSettings"
	return bb
}
