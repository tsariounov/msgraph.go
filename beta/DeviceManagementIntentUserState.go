// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// DeviceManagementIntentUserState Entity that represents user state for an intent
type DeviceManagementIntentUserState struct {
	// Entity is the base model of DeviceManagementIntentUserState
	Entity
	// UserPrincipalName The user principal name that is being reported on a device
	UserPrincipalName *string `json:"userPrincipalName,omitempty"`
	// UserName The user name that is being reported on a device
	UserName *string `json:"userName,omitempty"`
	// DeviceCount Count of Devices that belongs to a user for an intent
	DeviceCount *int `json:"deviceCount,omitempty"`
	// LastReportedDateTime Last modified date time of an intent report
	LastReportedDateTime *time.Time `json:"lastReportedDateTime,omitempty"`
	// State User state for an intent
	State *ComplianceStatus `json:"state,omitempty"`
}

// DeviceManagementIntentUserStateRequestBuilder is request builder for DeviceManagementIntentUserState
type DeviceManagementIntentUserStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementIntentUserStateRequest
func (b *DeviceManagementIntentUserStateRequestBuilder) Request() *DeviceManagementIntentUserStateRequest {
	return &DeviceManagementIntentUserStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementIntentUserStateRequest is request for DeviceManagementIntentUserState
type DeviceManagementIntentUserStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementIntentUserState
func (r *DeviceManagementIntentUserStateRequest) Get(ctx context.Context) (resObj *DeviceManagementIntentUserState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementIntentUserState
func (r *DeviceManagementIntentUserStateRequest) Update(ctx context.Context, reqObj *DeviceManagementIntentUserState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementIntentUserState
func (r *DeviceManagementIntentUserStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
