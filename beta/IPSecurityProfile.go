// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// IPSecurityProfile undocumented
type IPSecurityProfile struct {
	// Entity is the base model of IPSecurityProfile
	Entity
	// ActivityGroupNames undocumented
	ActivityGroupNames []string `json:"activityGroupNames,omitempty"`
	// Address undocumented
	Address *string `json:"address,omitempty"`
	// AzureSubscriptionID undocumented
	AzureSubscriptionID *string `json:"azureSubscriptionId,omitempty"`
	// AzureTenantID undocumented
	AzureTenantID *string `json:"azureTenantId,omitempty"`
	// CountHits undocumented
	CountHits *int `json:"countHits,omitempty"`
	// CountHosts undocumented
	CountHosts *int `json:"countHosts,omitempty"`
	// FirstSeenDateTime undocumented
	FirstSeenDateTime *time.Time `json:"firstSeenDateTime,omitempty"`
	// IPCategories undocumented
	IPCategories []IPCategory `json:"ipCategories,omitempty"`
	// IPReferenceData undocumented
	IPReferenceData []IPReferenceData `json:"ipReferenceData,omitempty"`
	// LastSeenDateTime undocumented
	LastSeenDateTime *time.Time `json:"lastSeenDateTime,omitempty"`
	// RiskScore undocumented
	RiskScore *string `json:"riskScore,omitempty"`
	// Tags undocumented
	Tags []string `json:"tags,omitempty"`
	// VendorInformation undocumented
	VendorInformation *SecurityVendorInformation `json:"vendorInformation,omitempty"`
}

// IPSecurityProfileRequestBuilder is request builder for IPSecurityProfile
type IPSecurityProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns IPSecurityProfileRequest
func (b *IPSecurityProfileRequestBuilder) Request() *IPSecurityProfileRequest {
	return &IPSecurityProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// IPSecurityProfileRequest is request for IPSecurityProfile
type IPSecurityProfileRequest struct{ BaseRequest }

// Get performs GET request for IPSecurityProfile
func (r *IPSecurityProfileRequest) Get(ctx context.Context) (resObj *IPSecurityProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for IPSecurityProfile
func (r *IPSecurityProfileRequest) Update(ctx context.Context, reqObj *IPSecurityProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for IPSecurityProfile
func (r *IPSecurityProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
