// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// NdesConnector Entity which represents an OnPrem Ndes connector.
type NdesConnector struct {
	// Entity is the base model of NdesConnector
	Entity
	// LastConnectionDateTime Last connection time for the Ndes Connector
	LastConnectionDateTime *time.Time `json:"lastConnectionDateTime,omitempty"`
	// State Ndes Connector Status
	State *NdesConnectorState `json:"state,omitempty"`
	// DisplayName The friendly name of the Ndes Connector.
	DisplayName *string `json:"displayName,omitempty"`
}

// NdesConnectorRequestBuilder is request builder for NdesConnector
type NdesConnectorRequestBuilder struct{ BaseRequestBuilder }

// Request returns NdesConnectorRequest
func (b *NdesConnectorRequestBuilder) Request() *NdesConnectorRequest {
	return &NdesConnectorRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// NdesConnectorRequest is request for NdesConnector
type NdesConnectorRequest struct{ BaseRequest }

// Get performs GET request for NdesConnector
func (r *NdesConnectorRequest) Get(ctx context.Context) (resObj *NdesConnector, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for NdesConnector
func (r *NdesConnectorRequest) Update(ctx context.Context, reqObj *NdesConnector) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for NdesConnector
func (r *NdesConnectorRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
