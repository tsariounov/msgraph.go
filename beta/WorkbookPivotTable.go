// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// WorkbookPivotTable undocumented
type WorkbookPivotTable struct {
	// Entity is the base model of WorkbookPivotTable
	Entity
	// Name undocumented
	Name *string `json:"name,omitempty"`
	// Worksheet undocumented
	Worksheet *WorkbookWorksheet `json:"worksheet,omitempty"`
}

// WorkbookPivotTableCollectionRefreshAllRequestParameter undocumented
type WorkbookPivotTableCollectionRefreshAllRequestParameter struct {
}

// WorkbookPivotTableRefreshRequestParameter undocumented
type WorkbookPivotTableRefreshRequestParameter struct {
}

// WorkbookPivotTableRequestBuilder is request builder for WorkbookPivotTable
type WorkbookPivotTableRequestBuilder struct{ BaseRequestBuilder }

// Request returns WorkbookPivotTableRequest
func (b *WorkbookPivotTableRequestBuilder) Request() *WorkbookPivotTableRequest {
	return &WorkbookPivotTableRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WorkbookPivotTableRequest is request for WorkbookPivotTable
type WorkbookPivotTableRequest struct{ BaseRequest }

// Get performs GET request for WorkbookPivotTable
func (r *WorkbookPivotTableRequest) Get(ctx context.Context) (resObj *WorkbookPivotTable, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WorkbookPivotTable
func (r *WorkbookPivotTableRequest) Update(ctx context.Context, reqObj *WorkbookPivotTable) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WorkbookPivotTable
func (r *WorkbookPivotTableRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// Worksheet is navigation property
func (b *WorkbookPivotTableRequestBuilder) Worksheet() *WorkbookWorksheetRequestBuilder {
	bb := &WorkbookWorksheetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/worksheet"
	return bb
}

//
type WorkbookPivotTableCollectionRefreshAllRequestBuilder struct{ BaseRequestBuilder }

// RefreshAll action undocumented
func (b *WorkbookWorksheetPivotTablesCollectionRequestBuilder) RefreshAll(reqObj *WorkbookPivotTableCollectionRefreshAllRequestParameter) *WorkbookPivotTableCollectionRefreshAllRequestBuilder {
	bb := &WorkbookPivotTableCollectionRefreshAllRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/refreshAll"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookPivotTableCollectionRefreshAllRequest struct{ BaseRequest }

//
func (b *WorkbookPivotTableCollectionRefreshAllRequestBuilder) Request() *WorkbookPivotTableCollectionRefreshAllRequest {
	return &WorkbookPivotTableCollectionRefreshAllRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *WorkbookPivotTableCollectionRefreshAllRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type WorkbookPivotTableRefreshRequestBuilder struct{ BaseRequestBuilder }

// Refresh action undocumented
func (b *WorkbookPivotTableRequestBuilder) Refresh(reqObj *WorkbookPivotTableRefreshRequestParameter) *WorkbookPivotTableRefreshRequestBuilder {
	bb := &WorkbookPivotTableRefreshRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/refresh"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type WorkbookPivotTableRefreshRequest struct{ BaseRequest }

//
func (b *WorkbookPivotTableRefreshRequestBuilder) Request() *WorkbookPivotTableRefreshRequest {
	return &WorkbookPivotTableRefreshRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *WorkbookPivotTableRefreshRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}
