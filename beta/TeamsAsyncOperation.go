// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// TeamsAsyncOperation undocumented
type TeamsAsyncOperation struct {
	// Entity is the base model of TeamsAsyncOperation
	Entity
	// OperationType undocumented
	OperationType *TeamsAsyncOperationType `json:"operationType,omitempty"`
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// Status undocumented
	Status *TeamsAsyncOperationStatus `json:"status,omitempty"`
	// LastActionDateTime undocumented
	LastActionDateTime *time.Time `json:"lastActionDateTime,omitempty"`
	// AttemptsCount undocumented
	AttemptsCount *int `json:"attemptsCount,omitempty"`
	// TargetResourceID undocumented
	TargetResourceID *string `json:"targetResourceId,omitempty"`
	// TargetResourceLocation undocumented
	TargetResourceLocation *string `json:"targetResourceLocation,omitempty"`
	// Error undocumented
	Error *OperationError `json:"error,omitempty"`
}

// TeamsAsyncOperationRequestBuilder is request builder for TeamsAsyncOperation
type TeamsAsyncOperationRequestBuilder struct{ BaseRequestBuilder }

// Request returns TeamsAsyncOperationRequest
func (b *TeamsAsyncOperationRequestBuilder) Request() *TeamsAsyncOperationRequest {
	return &TeamsAsyncOperationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TeamsAsyncOperationRequest is request for TeamsAsyncOperation
type TeamsAsyncOperationRequest struct{ BaseRequest }

// Get performs GET request for TeamsAsyncOperation
func (r *TeamsAsyncOperationRequest) Get(ctx context.Context) (resObj *TeamsAsyncOperation, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TeamsAsyncOperation
func (r *TeamsAsyncOperationRequest) Update(ctx context.Context, reqObj *TeamsAsyncOperation) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TeamsAsyncOperation
func (r *TeamsAsyncOperationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
