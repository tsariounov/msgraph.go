// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// DeviceHealthScriptAssignment Contains properties used to assign a device management script to a group.
type DeviceHealthScriptAssignment struct {
	// Entity is the base model of DeviceHealthScriptAssignment
	Entity
	// Target The Azure Active Directory group we are targeting the script to
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
	// RunRemediationScript Determine whether we want to run detection script only or run both detection script and remediation script
	RunRemediationScript *bool `json:"runRemediationScript,omitempty"`
	// RunSchedule Script run schedule for the target group
	RunSchedule *RunSchedule `json:"runSchedule,omitempty"`
}

// DeviceHealthScriptAssignmentRequestBuilder is request builder for DeviceHealthScriptAssignment
type DeviceHealthScriptAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptAssignmentRequest
func (b *DeviceHealthScriptAssignmentRequestBuilder) Request() *DeviceHealthScriptAssignmentRequest {
	return &DeviceHealthScriptAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptAssignmentRequest is request for DeviceHealthScriptAssignment
type DeviceHealthScriptAssignmentRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptAssignment
func (r *DeviceHealthScriptAssignmentRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptAssignment
func (r *DeviceHealthScriptAssignmentRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptAssignment
func (r *DeviceHealthScriptAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
