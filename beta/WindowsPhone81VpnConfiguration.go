// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// WindowsPhone81VpnConfiguration By providing the configurations in this profile you can instruct the Windows Phone 8.1 to connect to desired VPN endpoint. By specifying the authentication method and security types expected by VPN endpoint you can make the VPN connection seamless for end user.
type WindowsPhone81VpnConfiguration struct {
	// Windows81VpnConfiguration is the base model of WindowsPhone81VpnConfiguration
	Windows81VpnConfiguration
	// BypassVpnOnCompanyWifi Bypass VPN on company Wi-Fi.
	BypassVpnOnCompanyWifi *bool `json:"bypassVpnOnCompanyWifi,omitempty"`
	// BypassVpnOnHomeWifi Bypass VPN on home Wi-Fi.
	BypassVpnOnHomeWifi *bool `json:"bypassVpnOnHomeWifi,omitempty"`
	// AuthenticationMethod Authentication method.
	AuthenticationMethod *VpnAuthenticationMethod `json:"authenticationMethod,omitempty"`
	// RememberUserCredentials Remember user credentials.
	RememberUserCredentials *bool `json:"rememberUserCredentials,omitempty"`
	// DNSSuffixSearchList DNS suffix search list.
	DNSSuffixSearchList []string `json:"dnsSuffixSearchList,omitempty"`
	// IdentityCertificate undocumented
	IdentityCertificate *WindowsPhone81CertificateProfileBase `json:"identityCertificate,omitempty"`
}

// WindowsPhone81VpnConfigurationRequestBuilder is request builder for WindowsPhone81VpnConfiguration
type WindowsPhone81VpnConfigurationRequestBuilder struct{ BaseRequestBuilder }

// Request returns WindowsPhone81VpnConfigurationRequest
func (b *WindowsPhone81VpnConfigurationRequestBuilder) Request() *WindowsPhone81VpnConfigurationRequest {
	return &WindowsPhone81VpnConfigurationRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// WindowsPhone81VpnConfigurationRequest is request for WindowsPhone81VpnConfiguration
type WindowsPhone81VpnConfigurationRequest struct{ BaseRequest }

// Get performs GET request for WindowsPhone81VpnConfiguration
func (r *WindowsPhone81VpnConfigurationRequest) Get(ctx context.Context) (resObj *WindowsPhone81VpnConfiguration, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for WindowsPhone81VpnConfiguration
func (r *WindowsPhone81VpnConfigurationRequest) Update(ctx context.Context, reqObj *WindowsPhone81VpnConfiguration) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for WindowsPhone81VpnConfiguration
func (r *WindowsPhone81VpnConfigurationRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// IdentityCertificate is navigation property
func (b *WindowsPhone81VpnConfigurationRequestBuilder) IdentityCertificate() *WindowsPhone81CertificateProfileBaseRequestBuilder {
	bb := &WindowsPhone81CertificateProfileBaseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/identityCertificate"
	return bb
}
