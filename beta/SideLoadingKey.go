// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// SideLoadingKey SideLoadingKey entity is required for Windows 8 and 8.1 devices to intall Line Of Business Apps for a tenant.
type SideLoadingKey struct {
	// Entity is the base model of SideLoadingKey
	Entity
	// Value Side Loading Key Value, it is 5x5 value, seperated by hiphens.
	Value *string `json:"value,omitempty"`
	// DisplayName Side Loading Key Name displayed to the ITPro Admins.
	DisplayName *string `json:"displayName,omitempty"`
	// Description Side Loading Key description displayed to the ITPro Admins..
	Description *string `json:"description,omitempty"`
	// TotalActivation Side Loading Key Total Activation displayed to the ITPro Admins.
	TotalActivation *int `json:"totalActivation,omitempty"`
	// LastUpdatedDateTime Side Loading Key Last Updated Date displayed to the ITPro Admins.
	LastUpdatedDateTime *string `json:"lastUpdatedDateTime,omitempty"`
}

// SideLoadingKeyRequestBuilder is request builder for SideLoadingKey
type SideLoadingKeyRequestBuilder struct{ BaseRequestBuilder }

// Request returns SideLoadingKeyRequest
func (b *SideLoadingKeyRequestBuilder) Request() *SideLoadingKeyRequest {
	return &SideLoadingKeyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SideLoadingKeyRequest is request for SideLoadingKey
type SideLoadingKeyRequest struct{ BaseRequest }

// Get performs GET request for SideLoadingKey
func (r *SideLoadingKeyRequest) Get(ctx context.Context) (resObj *SideLoadingKey, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for SideLoadingKey
func (r *SideLoadingKeyRequest) Update(ctx context.Context, reqObj *SideLoadingKey) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for SideLoadingKey
func (r *SideLoadingKeyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
