// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// UserExperienceAnalyticsDevicePerformance The user experience analytics device performance entity contains device boot performance details.
type UserExperienceAnalyticsDevicePerformance struct {
	// Entity is the base model of UserExperienceAnalyticsDevicePerformance
	Entity
	// DeviceName The user experience analytics device name.
	DeviceName *string `json:"deviceName,omitempty"`
	// Model The user experience analytics device model.
	Model *string `json:"model,omitempty"`
	// Manufacturer The user experience analytics device manufacturer.
	Manufacturer *string `json:"manufacturer,omitempty"`
	// DiskType The user experience analytics device disk type.
	DiskType *DiskType `json:"diskType,omitempty"`
	// OperatingSystemVersion The user experience analytics device Operating System version.
	OperatingSystemVersion *string `json:"operatingSystemVersion,omitempty"`
	// BootScore The user experience analytics device boot score.
	BootScore *int `json:"bootScore,omitempty"`
	// CoreBootTimeInMs The user experience analytics device core boot time in milliseconds.
	CoreBootTimeInMs *int `json:"coreBootTimeInMs,omitempty"`
	// GroupPolicyBootTimeInMs The user experience analytics device group policy boot time in milliseconds.
	GroupPolicyBootTimeInMs *int `json:"groupPolicyBootTimeInMs,omitempty"`
	// HealthStatus The health state of the user experience analytics device.
	HealthStatus *UserExperienceAnalyticsHealthState `json:"healthStatus,omitempty"`
	// LoginScore The user experience analytics device login score.
	LoginScore *int `json:"loginScore,omitempty"`
	// CoreLoginTimeInMs The user experience analytics device core login time in milliseconds.
	CoreLoginTimeInMs *int `json:"coreLoginTimeInMs,omitempty"`
	// GroupPolicyLoginTimeInMs The user experience analytics device group policy login time in milliseconds.
	GroupPolicyLoginTimeInMs *int `json:"groupPolicyLoginTimeInMs,omitempty"`
	// DeviceCount User experience analytics summarized device count.
	DeviceCount *int `json:"deviceCount,omitempty"`
}

// UserExperienceAnalyticsDevicePerformanceRequestBuilder is request builder for UserExperienceAnalyticsDevicePerformance
type UserExperienceAnalyticsDevicePerformanceRequestBuilder struct{ BaseRequestBuilder }

// Request returns UserExperienceAnalyticsDevicePerformanceRequest
func (b *UserExperienceAnalyticsDevicePerformanceRequestBuilder) Request() *UserExperienceAnalyticsDevicePerformanceRequest {
	return &UserExperienceAnalyticsDevicePerformanceRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// UserExperienceAnalyticsDevicePerformanceRequest is request for UserExperienceAnalyticsDevicePerformance
type UserExperienceAnalyticsDevicePerformanceRequest struct{ BaseRequest }

// Get performs GET request for UserExperienceAnalyticsDevicePerformance
func (r *UserExperienceAnalyticsDevicePerformanceRequest) Get(ctx context.Context) (resObj *UserExperienceAnalyticsDevicePerformance, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for UserExperienceAnalyticsDevicePerformance
func (r *UserExperienceAnalyticsDevicePerformanceRequest) Update(ctx context.Context, reqObj *UserExperienceAnalyticsDevicePerformance) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for UserExperienceAnalyticsDevicePerformance
func (r *UserExperienceAnalyticsDevicePerformanceRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
