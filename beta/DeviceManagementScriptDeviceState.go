// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// DeviceManagementScriptDeviceState Contains properties for device run state of the device management script.
type DeviceManagementScriptDeviceState struct {
	// Entity is the base model of DeviceManagementScriptDeviceState
	Entity
	// RunState State of latest run of the device management script.
	RunState *RunState `json:"runState,omitempty"`
	// ResultMessage Details of execution output.
	ResultMessage *string `json:"resultMessage,omitempty"`
	// LastStateUpdateDateTime Latest time the device management script executes.
	LastStateUpdateDateTime *time.Time `json:"lastStateUpdateDateTime,omitempty"`
	// ErrorCode Error code corresponding to erroneous execution of the device management script.
	ErrorCode *int `json:"errorCode,omitempty"`
	// ErrorDescription Error description corresponding to erroneous execution of the device management script.
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// ManagedDevice undocumented
	ManagedDevice *ManagedDevice `json:"managedDevice,omitempty"`
}

// DeviceManagementScriptDeviceStateRequestBuilder is request builder for DeviceManagementScriptDeviceState
type DeviceManagementScriptDeviceStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementScriptDeviceStateRequest
func (b *DeviceManagementScriptDeviceStateRequestBuilder) Request() *DeviceManagementScriptDeviceStateRequest {
	return &DeviceManagementScriptDeviceStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementScriptDeviceStateRequest is request for DeviceManagementScriptDeviceState
type DeviceManagementScriptDeviceStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementScriptDeviceState
func (r *DeviceManagementScriptDeviceStateRequest) Get(ctx context.Context) (resObj *DeviceManagementScriptDeviceState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementScriptDeviceState
func (r *DeviceManagementScriptDeviceStateRequest) Update(ctx context.Context, reqObj *DeviceManagementScriptDeviceState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementScriptDeviceState
func (r *DeviceManagementScriptDeviceStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDevice is navigation property
func (b *DeviceManagementScriptDeviceStateRequestBuilder) ManagedDevice() *ManagedDeviceRequestBuilder {
	bb := &ManagedDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedDevice"
	return bb
}
