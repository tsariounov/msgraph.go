// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// Room undocumented
type Room struct {
	// Place is the base model of Room
	Place
	// EmailAddress undocumented
	EmailAddress *string `json:"emailAddress,omitempty"`
	// Nickname undocumented
	Nickname *string `json:"nickname,omitempty"`
	// Building undocumented
	Building *string `json:"building,omitempty"`
	// FloorNumber undocumented
	FloorNumber *int `json:"floorNumber,omitempty"`
	// Label undocumented
	Label *string `json:"label,omitempty"`
	// Capacity undocumented
	Capacity *int `json:"capacity,omitempty"`
	// BookingType undocumented
	BookingType *BookingType `json:"bookingType,omitempty"`
	// AudioDeviceName undocumented
	AudioDeviceName *string `json:"audioDeviceName,omitempty"`
	// VideoDeviceName undocumented
	VideoDeviceName *string `json:"videoDeviceName,omitempty"`
	// DisplayDeviceName undocumented
	DisplayDeviceName *string `json:"displayDeviceName,omitempty"`
	// IsWheelChairAccessible undocumented
	IsWheelChairAccessible *bool `json:"isWheelChairAccessible,omitempty"`
	// Tags undocumented
	Tags []string `json:"tags,omitempty"`
	// FloorLabel undocumented
	FloorLabel *string `json:"floorLabel,omitempty"`
}

// RoomRequestBuilder is request builder for Room
type RoomRequestBuilder struct{ BaseRequestBuilder }

// Request returns RoomRequest
func (b *RoomRequestBuilder) Request() *RoomRequest {
	return &RoomRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// RoomRequest is request for Room
type RoomRequest struct{ BaseRequest }

// Get performs GET request for Room
func (r *RoomRequest) Get(ctx context.Context) (resObj *Room, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Room
func (r *RoomRequest) Update(ctx context.Context, reqObj *Room) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Room
func (r *RoomRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
