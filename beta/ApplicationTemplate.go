// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// ApplicationTemplate undocumented
type ApplicationTemplate struct {
	// Entity is the base model of ApplicationTemplate
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// HomePageURL undocumented
	HomePageURL *string `json:"homePageUrl,omitempty"`
	// SupportedSingleSignOnModes undocumented
	SupportedSingleSignOnModes []string `json:"supportedSingleSignOnModes,omitempty"`
	// SupportedProvisioningTypes undocumented
	SupportedProvisioningTypes []string `json:"supportedProvisioningTypes,omitempty"`
	// LogoURL undocumented
	LogoURL *string `json:"logoUrl,omitempty"`
	// Categories undocumented
	Categories []string `json:"categories,omitempty"`
	// Publisher undocumented
	Publisher *string `json:"publisher,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
}

// ApplicationTemplateInstantiateRequestParameter undocumented
type ApplicationTemplateInstantiateRequestParameter struct {
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
}

// ApplicationTemplateRequestBuilder is request builder for ApplicationTemplate
type ApplicationTemplateRequestBuilder struct{ BaseRequestBuilder }

// Request returns ApplicationTemplateRequest
func (b *ApplicationTemplateRequestBuilder) Request() *ApplicationTemplateRequest {
	return &ApplicationTemplateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ApplicationTemplateRequest is request for ApplicationTemplate
type ApplicationTemplateRequest struct{ BaseRequest }

// Get performs GET request for ApplicationTemplate
func (r *ApplicationTemplateRequest) Get(ctx context.Context) (resObj *ApplicationTemplate, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ApplicationTemplate
func (r *ApplicationTemplateRequest) Update(ctx context.Context, reqObj *ApplicationTemplate) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ApplicationTemplate
func (r *ApplicationTemplateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

//
type ApplicationTemplateInstantiateRequestBuilder struct{ BaseRequestBuilder }

// Instantiate action undocumented
func (b *ApplicationTemplateRequestBuilder) Instantiate(reqObj *ApplicationTemplateInstantiateRequestParameter) *ApplicationTemplateInstantiateRequestBuilder {
	bb := &ApplicationTemplateInstantiateRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/instantiate"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type ApplicationTemplateInstantiateRequest struct{ BaseRequest }

//
func (b *ApplicationTemplateInstantiateRequestBuilder) Request() *ApplicationTemplateInstantiateRequest {
	return &ApplicationTemplateInstantiateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *ApplicationTemplateInstantiateRequest) Post(ctx context.Context) (resObj *ApplicationServicePrincipal, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}
