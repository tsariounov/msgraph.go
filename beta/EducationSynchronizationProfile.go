// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"fmt"
	"io/ioutil"
	"net/http"

	"github.com/yaegashi/msgraph.go/jsonx"
)

// EducationSynchronizationProfile undocumented
type EducationSynchronizationProfile struct {
	// Entity is the base model of EducationSynchronizationProfile
	Entity
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// DataProvider undocumented
	DataProvider *EducationSynchronizationDataProvider `json:"dataProvider,omitempty"`
	// IdentitySynchronizationConfiguration undocumented
	IdentitySynchronizationConfiguration *EducationIdentitySynchronizationConfiguration `json:"identitySynchronizationConfiguration,omitempty"`
	// LicensesToAssign undocumented
	LicensesToAssign []EducationSynchronizationLicenseAssignment `json:"licensesToAssign,omitempty"`
	// State undocumented
	State *EducationSynchronizationProfileState `json:"state,omitempty"`
	// HandleSpecialCharacterConstraint undocumented
	HandleSpecialCharacterConstraint *bool `json:"handleSpecialCharacterConstraint,omitempty"`
	// Errors undocumented
	Errors []EducationSynchronizationError `json:"errors,omitempty"`
	// ProfileStatus undocumented
	ProfileStatus *EducationSynchronizationProfileStatus `json:"profileStatus,omitempty"`
}

// EducationSynchronizationProfileResumeRequestParameter undocumented
type EducationSynchronizationProfileResumeRequestParameter struct {
}

// EducationSynchronizationProfilePauseRequestParameter undocumented
type EducationSynchronizationProfilePauseRequestParameter struct {
}

// EducationSynchronizationProfileResetRequestParameter undocumented
type EducationSynchronizationProfileResetRequestParameter struct {
}

// EducationSynchronizationProfileStartRequestParameter undocumented
type EducationSynchronizationProfileStartRequestParameter struct {
}

// EducationSynchronizationProfileRequestBuilder is request builder for EducationSynchronizationProfile
type EducationSynchronizationProfileRequestBuilder struct{ BaseRequestBuilder }

// Request returns EducationSynchronizationProfileRequest
func (b *EducationSynchronizationProfileRequestBuilder) Request() *EducationSynchronizationProfileRequest {
	return &EducationSynchronizationProfileRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// EducationSynchronizationProfileRequest is request for EducationSynchronizationProfile
type EducationSynchronizationProfileRequest struct{ BaseRequest }

// Get performs GET request for EducationSynchronizationProfile
func (r *EducationSynchronizationProfileRequest) Get(ctx context.Context) (resObj *EducationSynchronizationProfile, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for EducationSynchronizationProfile
func (r *EducationSynchronizationProfileRequest) Update(ctx context.Context, reqObj *EducationSynchronizationProfile) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for EducationSynchronizationProfile
func (r *EducationSynchronizationProfileRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// Errors returns request builder for EducationSynchronizationError collection
func (b *EducationSynchronizationProfileRequestBuilder) Errors() *EducationSynchronizationProfileErrorsCollectionRequestBuilder {
	bb := &EducationSynchronizationProfileErrorsCollectionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/errors"
	return bb
}

// EducationSynchronizationProfileErrorsCollectionRequestBuilder is request builder for EducationSynchronizationError collection
type EducationSynchronizationProfileErrorsCollectionRequestBuilder struct{ BaseRequestBuilder }

// Request returns request for EducationSynchronizationError collection
func (b *EducationSynchronizationProfileErrorsCollectionRequestBuilder) Request() *EducationSynchronizationProfileErrorsCollectionRequest {
	return &EducationSynchronizationProfileErrorsCollectionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ID returns request builder for EducationSynchronizationError item
func (b *EducationSynchronizationProfileErrorsCollectionRequestBuilder) ID(id string) *EducationSynchronizationErrorRequestBuilder {
	bb := &EducationSynchronizationErrorRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/" + id
	return bb
}

// EducationSynchronizationProfileErrorsCollectionRequest is request for EducationSynchronizationError collection
type EducationSynchronizationProfileErrorsCollectionRequest struct{ BaseRequest }

// Paging perfoms paging operation for EducationSynchronizationError collection
func (r *EducationSynchronizationProfileErrorsCollectionRequest) Paging(ctx context.Context, method, path string, obj interface{}) ([]EducationSynchronizationError, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationSynchronizationError
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []EducationSynchronizationError
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

// Get performs GET request for EducationSynchronizationError collection
func (r *EducationSynchronizationProfileErrorsCollectionRequest) Get(ctx context.Context) ([]EducationSynchronizationError, error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	return r.Paging(ctx, "GET", query, nil)
}

// Add performs POST request for EducationSynchronizationError collection
func (r *EducationSynchronizationProfileErrorsCollectionRequest) Add(ctx context.Context, reqObj *EducationSynchronizationError) (resObj *EducationSynchronizationError, err error) {
	err = r.JSONRequest(ctx, "POST", "", reqObj, &resObj)
	return
}

// ProfileStatus is navigation property
func (b *EducationSynchronizationProfileRequestBuilder) ProfileStatus() *EducationSynchronizationProfileStatusRequestBuilder {
	bb := &EducationSynchronizationProfileStatusRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/profileStatus"
	return bb
}

//
type EducationSynchronizationProfileResumeRequestBuilder struct{ BaseRequestBuilder }

// Resume action undocumented
func (b *EducationSynchronizationProfileRequestBuilder) Resume(reqObj *EducationSynchronizationProfileResumeRequestParameter) *EducationSynchronizationProfileResumeRequestBuilder {
	bb := &EducationSynchronizationProfileResumeRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/resume"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type EducationSynchronizationProfileResumeRequest struct{ BaseRequest }

//
func (b *EducationSynchronizationProfileResumeRequestBuilder) Request() *EducationSynchronizationProfileResumeRequest {
	return &EducationSynchronizationProfileResumeRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *EducationSynchronizationProfileResumeRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type EducationSynchronizationProfilePauseRequestBuilder struct{ BaseRequestBuilder }

// Pause action undocumented
func (b *EducationSynchronizationProfileRequestBuilder) Pause(reqObj *EducationSynchronizationProfilePauseRequestParameter) *EducationSynchronizationProfilePauseRequestBuilder {
	bb := &EducationSynchronizationProfilePauseRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/pause"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type EducationSynchronizationProfilePauseRequest struct{ BaseRequest }

//
func (b *EducationSynchronizationProfilePauseRequestBuilder) Request() *EducationSynchronizationProfilePauseRequest {
	return &EducationSynchronizationProfilePauseRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *EducationSynchronizationProfilePauseRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type EducationSynchronizationProfileResetRequestBuilder struct{ BaseRequestBuilder }

// Reset action undocumented
func (b *EducationSynchronizationProfileRequestBuilder) Reset(reqObj *EducationSynchronizationProfileResetRequestParameter) *EducationSynchronizationProfileResetRequestBuilder {
	bb := &EducationSynchronizationProfileResetRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/reset"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type EducationSynchronizationProfileResetRequest struct{ BaseRequest }

//
func (b *EducationSynchronizationProfileResetRequestBuilder) Request() *EducationSynchronizationProfileResetRequest {
	return &EducationSynchronizationProfileResetRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *EducationSynchronizationProfileResetRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type EducationSynchronizationProfileStartRequestBuilder struct{ BaseRequestBuilder }

// Start action undocumented
func (b *EducationSynchronizationProfileRequestBuilder) Start(reqObj *EducationSynchronizationProfileStartRequestParameter) *EducationSynchronizationProfileStartRequestBuilder {
	bb := &EducationSynchronizationProfileStartRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/start"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type EducationSynchronizationProfileStartRequest struct{ BaseRequest }

//
func (b *EducationSynchronizationProfileStartRequestBuilder) Request() *EducationSynchronizationProfileStartRequest {
	return &EducationSynchronizationProfileStartRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *EducationSynchronizationProfileStartRequest) Paging(ctx context.Context, method, path string, obj interface{}) ([]EducationFileSynchronizationVerificationMessage, error) {
	req, err := r.NewJSONRequest(method, path, obj)
	if err != nil {
		return nil, err
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}
	res, err := r.client.Do(req)
	if err != nil {
		return nil, err
	}
	var values []EducationFileSynchronizationVerificationMessage
	for {
		defer res.Body.Close()
		if res.StatusCode != http.StatusOK {
			b, _ := ioutil.ReadAll(res.Body)
			errRes := &ErrorResponse{Response: res}
			err := jsonx.Unmarshal(b, errRes)
			if err != nil {
				return nil, fmt.Errorf("%s: %s", res.Status, string(b))
			}
			return nil, errRes
		}
		var (
			paging Paging
			value  []EducationFileSynchronizationVerificationMessage
		)
		err := jsonx.NewDecoder(res.Body).Decode(&paging)
		if err != nil {
			return nil, err
		}
		err = jsonx.Unmarshal(paging.Value, &value)
		if err != nil {
			return nil, err
		}
		values = append(values, value...)
		if len(paging.NextLink) == 0 {
			return values, nil
		}
		req, err = http.NewRequest("GET", paging.NextLink, nil)
		if ctx != nil {
			req = req.WithContext(ctx)
		}
		res, err = r.client.Do(req)
		if err != nil {
			return nil, err
		}
	}
}

//
func (r *EducationSynchronizationProfileStartRequest) Post(ctx context.Context) ([]EducationFileSynchronizationVerificationMessage, error) {
	return r.Paging(ctx, "POST", "", r.requestObject)
}
