// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// ComplianceManagementPartner Compliance management partner for all platforms
type ComplianceManagementPartner struct {
	// Entity is the base model of ComplianceManagementPartner
	Entity
	// LastHeartbeatDateTime Timestamp of last heartbeat after admin onboarded to the compliance management partner
	LastHeartbeatDateTime *time.Time `json:"lastHeartbeatDateTime,omitempty"`
	// PartnerState Partner state of this tenant
	PartnerState *DeviceManagementPartnerTenantState `json:"partnerState,omitempty"`
	// DisplayName Partner display name
	DisplayName *string `json:"displayName,omitempty"`
	// MacOsOnboarded Partner onboarded for Mac devices.
	MacOsOnboarded *bool `json:"macOsOnboarded,omitempty"`
	// WindowsOnboarded Partner onboarded for Windows devices.
	WindowsOnboarded *bool `json:"windowsOnboarded,omitempty"`
	// AndroidOnboarded Partner onboarded for Android devices.
	AndroidOnboarded *bool `json:"androidOnboarded,omitempty"`
	// IOSOnboarded Partner onboarded for ios devices.
	IOSOnboarded *bool `json:"iosOnboarded,omitempty"`
	// MacOsEnrollmentAssignments User groups which enroll Mac devices through partner.
	MacOsEnrollmentAssignments []ComplianceManagementPartnerAssignment `json:"macOsEnrollmentAssignments,omitempty"`
	// WindowsEnrollmentAssignments User groups which enroll Windows devices through partner.
	WindowsEnrollmentAssignments []ComplianceManagementPartnerAssignment `json:"windowsEnrollmentAssignments,omitempty"`
	// AndroidEnrollmentAssignments User groups which enroll Android devices through partner.
	AndroidEnrollmentAssignments []ComplianceManagementPartnerAssignment `json:"androidEnrollmentAssignments,omitempty"`
	// IOSEnrollmentAssignments User groups which enroll ios devices through partner.
	IOSEnrollmentAssignments []ComplianceManagementPartnerAssignment `json:"iosEnrollmentAssignments,omitempty"`
}

// ComplianceManagementPartnerRequestBuilder is request builder for ComplianceManagementPartner
type ComplianceManagementPartnerRequestBuilder struct{ BaseRequestBuilder }

// Request returns ComplianceManagementPartnerRequest
func (b *ComplianceManagementPartnerRequestBuilder) Request() *ComplianceManagementPartnerRequest {
	return &ComplianceManagementPartnerRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ComplianceManagementPartnerRequest is request for ComplianceManagementPartner
type ComplianceManagementPartnerRequest struct{ BaseRequest }

// Get performs GET request for ComplianceManagementPartner
func (r *ComplianceManagementPartnerRequest) Get(ctx context.Context) (resObj *ComplianceManagementPartner, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ComplianceManagementPartner
func (r *ComplianceManagementPartnerRequest) Update(ctx context.Context, reqObj *ComplianceManagementPartner) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ComplianceManagementPartner
func (r *ComplianceManagementPartnerRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
