// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// GovernanceRoleAssignmentRequestObject undocumented
type GovernanceRoleAssignmentRequestObject struct {
	// Entity is the base model of GovernanceRoleAssignmentRequestObject
	Entity
	// ResourceID undocumented
	ResourceID *string `json:"resourceId,omitempty"`
	// RoleDefinitionID undocumented
	RoleDefinitionID *string `json:"roleDefinitionId,omitempty"`
	// SubjectID undocumented
	SubjectID *string `json:"subjectId,omitempty"`
	// LinkedEligibleRoleAssignmentID undocumented
	LinkedEligibleRoleAssignmentID *string `json:"linkedEligibleRoleAssignmentId,omitempty"`
	// Type undocumented
	Type *string `json:"type,omitempty"`
	// AssignmentState undocumented
	AssignmentState *string `json:"assignmentState,omitempty"`
	// RequestedDateTime undocumented
	RequestedDateTime *time.Time `json:"requestedDateTime,omitempty"`
	// Reason undocumented
	Reason *string `json:"reason,omitempty"`
	// Status undocumented
	Status *GovernanceRoleAssignmentRequestStatus `json:"status,omitempty"`
	// Schedule undocumented
	Schedule *GovernanceSchedule `json:"schedule,omitempty"`
	// Resource undocumented
	Resource *GovernanceResource `json:"resource,omitempty"`
	// RoleDefinition undocumented
	RoleDefinition *GovernanceRoleDefinition `json:"roleDefinition,omitempty"`
	// Subject undocumented
	Subject *GovernanceSubject `json:"subject,omitempty"`
}

// GovernanceRoleAssignmentRequestObjectCancelRequestParameter undocumented
type GovernanceRoleAssignmentRequestObjectCancelRequestParameter struct {
}

// GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequestParameter undocumented
type GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequestParameter struct {
	// Decision undocumented
	Decision *string `json:"decision,omitempty"`
	// AssignmentState undocumented
	AssignmentState *string `json:"assignmentState,omitempty"`
	// Schedule undocumented
	Schedule *GovernanceSchedule `json:"schedule,omitempty"`
	// Reason undocumented
	Reason *string `json:"reason,omitempty"`
}

// GovernanceRoleAssignmentRequestObjectRequestBuilder is request builder for GovernanceRoleAssignmentRequestObject
type GovernanceRoleAssignmentRequestObjectRequestBuilder struct{ BaseRequestBuilder }

// Request returns GovernanceRoleAssignmentRequestObjectRequest
func (b *GovernanceRoleAssignmentRequestObjectRequestBuilder) Request() *GovernanceRoleAssignmentRequestObjectRequest {
	return &GovernanceRoleAssignmentRequestObjectRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// GovernanceRoleAssignmentRequestObjectRequest is request for GovernanceRoleAssignmentRequestObject
type GovernanceRoleAssignmentRequestObjectRequest struct{ BaseRequest }

// Get performs GET request for GovernanceRoleAssignmentRequestObject
func (r *GovernanceRoleAssignmentRequestObjectRequest) Get(ctx context.Context) (resObj *GovernanceRoleAssignmentRequestObject, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for GovernanceRoleAssignmentRequestObject
func (r *GovernanceRoleAssignmentRequestObjectRequest) Update(ctx context.Context, reqObj *GovernanceRoleAssignmentRequestObject) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for GovernanceRoleAssignmentRequestObject
func (r *GovernanceRoleAssignmentRequestObjectRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// Resource is navigation property
func (b *GovernanceRoleAssignmentRequestObjectRequestBuilder) Resource() *GovernanceResourceRequestBuilder {
	bb := &GovernanceResourceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/resource"
	return bb
}

// RoleDefinition is navigation property
func (b *GovernanceRoleAssignmentRequestObjectRequestBuilder) RoleDefinition() *GovernanceRoleDefinitionRequestBuilder {
	bb := &GovernanceRoleDefinitionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/roleDefinition"
	return bb
}

// Subject is navigation property
func (b *GovernanceRoleAssignmentRequestObjectRequestBuilder) Subject() *GovernanceSubjectRequestBuilder {
	bb := &GovernanceSubjectRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/subject"
	return bb
}

//
type GovernanceRoleAssignmentRequestObjectCancelRequestBuilder struct{ BaseRequestBuilder }

// Cancel action undocumented
func (b *GovernanceRoleAssignmentRequestObjectRequestBuilder) Cancel(reqObj *GovernanceRoleAssignmentRequestObjectCancelRequestParameter) *GovernanceRoleAssignmentRequestObjectCancelRequestBuilder {
	bb := &GovernanceRoleAssignmentRequestObjectCancelRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/cancel"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GovernanceRoleAssignmentRequestObjectCancelRequest struct{ BaseRequest }

//
func (b *GovernanceRoleAssignmentRequestObjectCancelRequestBuilder) Request() *GovernanceRoleAssignmentRequestObjectCancelRequest {
	return &GovernanceRoleAssignmentRequestObjectCancelRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *GovernanceRoleAssignmentRequestObjectCancelRequest) Post(ctx context.Context) error {
	return r.JSONRequest(ctx, "POST", "", r.requestObject, nil)
}

//
type GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequestBuilder struct{ BaseRequestBuilder }

// UpdateRequestAction action undocumented
func (b *GovernanceRoleAssignmentRequestObjectRequestBuilder) UpdateRequestAction(reqObj *GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequestParameter) *GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequestBuilder {
	bb := &GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.BaseRequestBuilder.baseURL += "/updateRequest"
	bb.BaseRequestBuilder.requestObject = reqObj
	return bb
}

//
type GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequest struct{ BaseRequest }

//
func (b *GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequestBuilder) Request() *GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequest {
	return &GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client, requestObject: b.requestObject},
	}
}

//
func (r *GovernanceRoleAssignmentRequestObjectUpdateRequestActionRequest) Post(ctx context.Context) (resObj *GovernanceRoleAssignmentRequestObject, err error) {
	err = r.JSONRequest(ctx, "POST", "", r.requestObject, &resObj)
	return
}
