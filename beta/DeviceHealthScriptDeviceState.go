// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// DeviceHealthScriptDeviceState Contains properties for device run state of the device health script.
type DeviceHealthScriptDeviceState struct {
	// Entity is the base model of DeviceHealthScriptDeviceState
	Entity
	// DetectionState Detection state from the lastest device health script execution
	DetectionState *RunState `json:"detectionState,omitempty"`
	// LastStateUpdateDateTime The last timestamp of when the device health script executed
	LastStateUpdateDateTime *time.Time `json:"lastStateUpdateDateTime,omitempty"`
	// ExpectedStateUpdateDateTime The next timestamp of when the device health script is expected to execute
	ExpectedStateUpdateDateTime *time.Time `json:"expectedStateUpdateDateTime,omitempty"`
	// LastSyncDateTime The last time that Intune Managment Extension synced with Intune
	LastSyncDateTime *time.Time `json:"lastSyncDateTime,omitempty"`
	// PreRemediationDetectionScriptOutput Output of the detection script before remediation
	PreRemediationDetectionScriptOutput *string `json:"preRemediationDetectionScriptOutput,omitempty"`
	// PreRemediationDetectionScriptError Error from the detection script before remediation
	PreRemediationDetectionScriptError *string `json:"preRemediationDetectionScriptError,omitempty"`
	// RemediationScriptError Error output of the remediation script
	RemediationScriptError *string `json:"remediationScriptError,omitempty"`
	// PostRemediationDetectionScriptOutput Detection script output after remediation
	PostRemediationDetectionScriptOutput *string `json:"postRemediationDetectionScriptOutput,omitempty"`
	// PostRemediationDetectionScriptError Error from the detection script after remediation
	PostRemediationDetectionScriptError *string `json:"postRemediationDetectionScriptError,omitempty"`
	// RemediationState Remediation state from the lastest device health script execution
	RemediationState *RemediationState `json:"remediationState,omitempty"`
	// ManagedDevice undocumented
	ManagedDevice *ManagedDevice `json:"managedDevice,omitempty"`
}

// DeviceHealthScriptDeviceStateRequestBuilder is request builder for DeviceHealthScriptDeviceState
type DeviceHealthScriptDeviceStateRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceHealthScriptDeviceStateRequest
func (b *DeviceHealthScriptDeviceStateRequestBuilder) Request() *DeviceHealthScriptDeviceStateRequest {
	return &DeviceHealthScriptDeviceStateRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceHealthScriptDeviceStateRequest is request for DeviceHealthScriptDeviceState
type DeviceHealthScriptDeviceStateRequest struct{ BaseRequest }

// Get performs GET request for DeviceHealthScriptDeviceState
func (r *DeviceHealthScriptDeviceStateRequest) Get(ctx context.Context) (resObj *DeviceHealthScriptDeviceState, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceHealthScriptDeviceState
func (r *DeviceHealthScriptDeviceStateRequest) Update(ctx context.Context, reqObj *DeviceHealthScriptDeviceState) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceHealthScriptDeviceState
func (r *DeviceHealthScriptDeviceStateRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}

// ManagedDevice is navigation property
func (b *DeviceHealthScriptDeviceStateRequestBuilder) ManagedDevice() *ManagedDeviceRequestBuilder {
	bb := &ManagedDeviceRequestBuilder{BaseRequestBuilder: b.BaseRequestBuilder}
	bb.baseURL += "/managedDevice"
	return bb
}
