// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// ConditionalAccessPolicy undocumented
type ConditionalAccessPolicy struct {
	// Entity is the base model of ConditionalAccessPolicy
	Entity
	// CreatedDateTime undocumented
	CreatedDateTime *time.Time `json:"createdDateTime,omitempty"`
	// ModifiedDateTime undocumented
	ModifiedDateTime *time.Time `json:"modifiedDateTime,omitempty"`
	// DisplayName undocumented
	DisplayName *string `json:"displayName,omitempty"`
	// Description undocumented
	Description *string `json:"description,omitempty"`
	// State undocumented
	State *ConditionalAccessPolicyState `json:"state,omitempty"`
	// Conditions undocumented
	Conditions *ConditionalAccessConditionSet `json:"conditions,omitempty"`
	// GrantControls undocumented
	GrantControls *ConditionalAccessGrantControls `json:"grantControls,omitempty"`
	// SessionControls undocumented
	SessionControls *ConditionalAccessSessionControls `json:"sessionControls,omitempty"`
}

// ConditionalAccessPolicyRequestBuilder is request builder for ConditionalAccessPolicy
type ConditionalAccessPolicyRequestBuilder struct{ BaseRequestBuilder }

// Request returns ConditionalAccessPolicyRequest
func (b *ConditionalAccessPolicyRequestBuilder) Request() *ConditionalAccessPolicyRequest {
	return &ConditionalAccessPolicyRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// ConditionalAccessPolicyRequest is request for ConditionalAccessPolicy
type ConditionalAccessPolicyRequest struct{ BaseRequest }

// Get performs GET request for ConditionalAccessPolicy
func (r *ConditionalAccessPolicyRequest) Get(ctx context.Context) (resObj *ConditionalAccessPolicy, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for ConditionalAccessPolicy
func (r *ConditionalAccessPolicyRequest) Update(ctx context.Context, reqObj *ConditionalAccessPolicy) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for ConditionalAccessPolicy
func (r *ConditionalAccessPolicyRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
