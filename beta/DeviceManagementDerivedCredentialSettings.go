// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// DeviceManagementDerivedCredentialSettings Entity that describes tenant level settings for derived credentials
type DeviceManagementDerivedCredentialSettings struct {
	// Entity is the base model of DeviceManagementDerivedCredentialSettings
	Entity
	// HelpURL The URL that will be accessible to end users as they retrieve a derived credential using the Company Portal.
	HelpURL *string `json:"helpUrl,omitempty"`
	// DisplayName The display name for the profile.
	DisplayName *string `json:"displayName,omitempty"`
	// Issuer The derived credential provider to use.
	Issuer *DeviceManagementDerivedCredentialIssuer `json:"issuer,omitempty"`
	// NotificationType The methods used to inform the end user to open Company Portal to deliver Wi-Fi, VPN, or email profiles that use certificates to the device.
	NotificationType *DeviceManagementDerivedCredentialNotificationType `json:"notificationType,omitempty"`
}

// DeviceManagementDerivedCredentialSettingsRequestBuilder is request builder for DeviceManagementDerivedCredentialSettings
type DeviceManagementDerivedCredentialSettingsRequestBuilder struct{ BaseRequestBuilder }

// Request returns DeviceManagementDerivedCredentialSettingsRequest
func (b *DeviceManagementDerivedCredentialSettingsRequestBuilder) Request() *DeviceManagementDerivedCredentialSettingsRequest {
	return &DeviceManagementDerivedCredentialSettingsRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// DeviceManagementDerivedCredentialSettingsRequest is request for DeviceManagementDerivedCredentialSettings
type DeviceManagementDerivedCredentialSettingsRequest struct{ BaseRequest }

// Get performs GET request for DeviceManagementDerivedCredentialSettings
func (r *DeviceManagementDerivedCredentialSettingsRequest) Get(ctx context.Context) (resObj *DeviceManagementDerivedCredentialSettings, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for DeviceManagementDerivedCredentialSettings
func (r *DeviceManagementDerivedCredentialSettingsRequest) Update(ctx context.Context, reqObj *DeviceManagementDerivedCredentialSettings) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for DeviceManagementDerivedCredentialSettings
func (r *DeviceManagementDerivedCredentialSettingsRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
