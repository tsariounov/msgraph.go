// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// TermsAndConditionsAssignment A termsAndConditionsAssignment entity represents the assignment of a given Terms and Conditions (T&C) policy to a given group. Users in the group will be required to accept the terms in order to have devices enrolled into Intune.
type TermsAndConditionsAssignment struct {
	// Entity is the base model of TermsAndConditionsAssignment
	Entity
	// Target Assignment target that the T&C policy is assigned to.
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// TermsAndConditionsAssignmentRequestBuilder is request builder for TermsAndConditionsAssignment
type TermsAndConditionsAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns TermsAndConditionsAssignmentRequest
func (b *TermsAndConditionsAssignmentRequestBuilder) Request() *TermsAndConditionsAssignmentRequest {
	return &TermsAndConditionsAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TermsAndConditionsAssignmentRequest is request for TermsAndConditionsAssignment
type TermsAndConditionsAssignmentRequest struct{ BaseRequest }

// Get performs GET request for TermsAndConditionsAssignment
func (r *TermsAndConditionsAssignmentRequest) Get(ctx context.Context) (resObj *TermsAndConditionsAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TermsAndConditionsAssignment
func (r *TermsAndConditionsAssignmentRequest) Update(ctx context.Context, reqObj *TermsAndConditionsAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TermsAndConditionsAssignment
func (r *TermsAndConditionsAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
