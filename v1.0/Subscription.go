// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import (
	"context"
	"time"
)

// Subscription undocumented
type Subscription struct {
	// Entity is the base model of Subscription
	Entity
	// Resource undocumented
	Resource *string `json:"resource,omitempty"`
	// ChangeType undocumented
	ChangeType *string `json:"changeType,omitempty"`
	// ClientState undocumented
	ClientState *string `json:"clientState,omitempty"`
	// NotificationURL undocumented
	NotificationURL *string `json:"notificationUrl,omitempty"`
	// ExpirationDateTime undocumented
	ExpirationDateTime *time.Time `json:"expirationDateTime,omitempty"`
	// ApplicationID undocumented
	ApplicationID *string `json:"applicationId,omitempty"`
	// CreatorID undocumented
	CreatorID *string `json:"creatorId,omitempty"`
}

// SubscriptionRequestBuilder is request builder for Subscription
type SubscriptionRequestBuilder struct{ BaseRequestBuilder }

// Request returns SubscriptionRequest
func (b *SubscriptionRequestBuilder) Request() *SubscriptionRequest {
	return &SubscriptionRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// SubscriptionRequest is request for Subscription
type SubscriptionRequest struct{ BaseRequest }

// Get performs GET request for Subscription
func (r *SubscriptionRequest) Get(ctx context.Context) (resObj *Subscription, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for Subscription
func (r *SubscriptionRequest) Update(ctx context.Context, reqObj *Subscription) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for Subscription
func (r *SubscriptionRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
