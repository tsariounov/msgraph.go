// Code generated by msgraph-generate.go DO NOT EDIT.

package msgraph

import "context"

// TargetedManagedAppPolicyAssignment The type for deployment of groups or apps.
type TargetedManagedAppPolicyAssignment struct {
	// Entity is the base model of TargetedManagedAppPolicyAssignment
	Entity
	// Target Identifier for deployment of a group or app
	Target *DeviceAndAppManagementAssignmentTarget `json:"target,omitempty"`
}

// TargetedManagedAppPolicyAssignmentRequestBuilder is request builder for TargetedManagedAppPolicyAssignment
type TargetedManagedAppPolicyAssignmentRequestBuilder struct{ BaseRequestBuilder }

// Request returns TargetedManagedAppPolicyAssignmentRequest
func (b *TargetedManagedAppPolicyAssignmentRequestBuilder) Request() *TargetedManagedAppPolicyAssignmentRequest {
	return &TargetedManagedAppPolicyAssignmentRequest{
		BaseRequest: BaseRequest{baseURL: b.baseURL, client: b.client},
	}
}

// TargetedManagedAppPolicyAssignmentRequest is request for TargetedManagedAppPolicyAssignment
type TargetedManagedAppPolicyAssignmentRequest struct{ BaseRequest }

// Get performs GET request for TargetedManagedAppPolicyAssignment
func (r *TargetedManagedAppPolicyAssignmentRequest) Get(ctx context.Context) (resObj *TargetedManagedAppPolicyAssignment, err error) {
	var query string
	if r.query != nil {
		query = "?" + r.query.Encode()
	}
	err = r.JSONRequest(ctx, "GET", query, nil, &resObj)
	return
}

// Update performs PATCH request for TargetedManagedAppPolicyAssignment
func (r *TargetedManagedAppPolicyAssignmentRequest) Update(ctx context.Context, reqObj *TargetedManagedAppPolicyAssignment) error {
	return r.JSONRequest(ctx, "PATCH", "", reqObj, nil)
}

// Delete performs DELETE request for TargetedManagedAppPolicyAssignment
func (r *TargetedManagedAppPolicyAssignmentRequest) Delete(ctx context.Context) error {
	return r.JSONRequest(ctx, "DELETE", "", nil, nil)
}
